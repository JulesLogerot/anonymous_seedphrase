[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "anonymous-seedphrase"
version = "0.1.0"
description = "Application de chiffrement sécurisé pour les seed phrases de cryptomonnaies"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Jules"}
]
keywords = ["crypto", "encryption", "seedphrase", "security", "cryptocurrency"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security :: Cryptography",
]

dependencies = [
    "streamlit>=1.39.0",
    "cryptography>=44.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "black>=24.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
]

[project.urls]
Homepage = "https://github.com/JulesLogerot/anonymous_seedphrase"
Repository = "https://github.com/JulesLogerot/anonymous_seedphrase"
Issues = "https://github.com/JulesLogerot/anonymous_seedphrase/issues"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py313"

# Sélection des règles de linting
lint.select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort (import sorting)
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
]

# Règles à ignorer
lint.ignore = []

# Fichiers/dossiers à exclure
extend-exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "*.egg-info",
    "build",
    "dist",
]

# Configuration du formateur
format.quote-style = "double"
format.indent-style = "space"
format.skip-magic-trailing-comma = false
format.line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
